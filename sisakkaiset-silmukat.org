#+INCLUDE: ohjelmointi-kappaleiden-yhteiset-asetukset.org

* Sisäkkäiset silmukat
** Esimerkki
   Piirretään alla oleva kuva, jossa on lukuja 40 pikselin välein.
   Kukin luku kertoo, kuinka monentena se on piirretty.
   #+NAME: sisakkaiset-silmukat-numerot-sarakkeittain
   #+BEGIN_SRC processing
     size (400, 400);
     colorMode (HSB, 100);
     textAlign (CENTER, CENTER);
     textSize (16);
     background (0);
     fill (100);

     final float ASKEL = 40;
     int numero = 1;

     for (float x = ASKEL; x < width; x += ASKEL)
       for (float y = ASKEL; y < height; y += ASKEL)
       {
         text (numero, x, y);
         numero++;
       }
   #+END_SRC

   Ohjelma voidaan kirjoittaa kahden /sisäkkäisen silmukan/ avulla.

   #+BEGIN_SRC processing :exports code :noweb yes
   <<sisakkaiset-silmukat-numerot-sarakkeittain>>
   #+END_SRC

   Mietitäänpä, miten ohjelma toimii.
   1. Ensin /ulommassa silmukassa/ muuttujan ~x~ arvoksi asetetaan
      ~ASKEL~ eli 40.
   2. Tämän jälkeen /sisemmän silmukan/ alussa muuttujan ~y~ arvoksi
      asetetaan myös ~ASKEL~ eli 40.
   3. Seuraavaksi suoritetaan sisempää silmukkaa niin kauan, kun ~y~
      on pienempi kuin ~height~. Tässä sisemmässä silmukassa muuttujan
      ~x~ arvoa ei muuteta. Niinpä muuttujan ~x~ arvo on koko
      ajan 40. Sisemmässä silmukassa piirretään siis ensin
      numerotaulukon ensimmäinen pystyrivi.
   4. Kun sisemmästä silmukasta poistutaan, muuttujan ~x~ uudeksi
      arvoksi tulee 80.
   5. Tämän jälkeen mennään uudestaan sisempään silmukkaan, jossa ~y~
      saa taas eri arvot. Näin piirretään siis toinen pystyrivi.

   Ohjelmassa luvut piirretään siis pystyrivi kerrallaan.
** Esimerkki
   Processing-ohjelman piirtoikkuna koostuu /pikseleistä/, joista
   kukin on pieni neliö näytöllä. Jos piirtoikkunan koko olisi
   \(10\times 10\), suurennettuna se näyttäisi alla olevan kuvan
   mukaiselta. Esimerkiksi koordinaatit \((0, 0)\) viittaavat
   vasemmassa yläkulmassa olevaan pieneen neliöön.
   #+NAME: sisakkaiset-silmukat-pikselit
   #+BEGIN_SRC asymptote :file sisakkaiset-silmukat-pikselit.svg
     size (12cm, 0);
     int N = 10;

     defaultpen (dotted + fontsize (18));

     for (int n = 0; n <= N; ++n)
       {
         draw ((0, n) -- (N, n));
         draw ((n, 0) -- (n, N));
         if (n != N)
           {
             real pos = n + .5;
             label ((string) n, (-1, N - pos));
             label ((string) n, (pos, N + 1));
           }
       }
   #+END_SRC

   #+RESULTS: sisakkaiset-silmukat-pikselit
   [[file:sisakkaiset-silmukat-pikselit.svg]]

   Alla oleva ohjelmakoodi piirtää kuvan, jossa kunkin pikselin
   värisävyn määrittää \(x\)-koordinaatti ja kirkkauden
   \(y\)-koordinaatti.

   #+BEGIN_SRC processing :exports both
     size (600, 600);
     colorMode (HSB, 100);

     for (int x = 0; x < width; x++)
       for (int y = 0; y < height; y++)
       {
         stroke (x / 6.0, 100, y / 6.0);
         point (x, y);
       }

   #+END_SRC
** Tehtäviä
   1. 
      #+NAME: sisakkaiset-silmukat-valkoiset-ympyrat
      #+BEGIN_SRC processing
        size (400, 400);

        final float HALKAISIJA = 20;
        final float SADE = HALKAISIJA / 2;

        for (float x = SADE; x < width; x += HALKAISIJA)
          for (float y = SADE; y < height; y += HALKAISIJA)
            ellipse (x, y, HALKAISIJA, HALKAISIJA);
      #+END_SRC

   2. pikseleillä satunnainen harmaasävy
** Ratkaisuja
   1.
      #+BEGIN_SRC processing :noweb yes :exports code
      <<sisakkaiset-silmukat-valkoiset-ympyrat>>
      #+END_SRC
