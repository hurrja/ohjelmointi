#+INCLUDE: ohjelmointi-kappaleiden-yhteiset-asetukset.org

* Kommentti ja väri
** Kommentti ohjelmakoodissa
   Tietokoneohjelmiin kirjoitetaan usein /kommentteja/, jotka ovat
   ohjelman ihmislukijalle tarkoitettuja selvennyksiä. Tietokone
   jättää kommentit huomiotta ohjelman suorituksessa.

   Processing-ohjelmointikielessä yksi tapa kirjoittaa kommentteja on
   kahden kauttaviivan ~//~ avulla. Tietokone jättää huomiotta kahta
   kauttaviivaa seuraavan tekstin rivin loppuun asti. Alla on
   esimerkki kommenttien käytöstä.

   #+BEGIN_SRC processing :exports both
     size (500, 500); // asetetaan piirtoikkunan koko

     // piirretään ristin muotoinen kuvio kahden suorakulmion avulla
     // keskelle piirtoikkunaa
     rect (200, 100, 100, 300);
     rect (100, 200, 300, 100);
   #+END_SRC
** Väreillä piirtäminen
   Värikynillä paperille piirrettäessä valitaan ensin, minkä värisellä
   kynällä piirretään. Samaan tapaan Processing-ohjelmointikielessä
   valitaan ennen piirtämistä, millä värillä piirretään. Samalla
   värillä piirretään kunnes valitaan toinen piirtoväri.

   Processing-ohjelmointikielessä on yli 16 miljoonaa eri väristä
   \ldquo{}piirtokynää\rdquo{}. Niitä ei enää kannata yrittää nimetä,
   vaan eri väreihin viitataan luvuilla. Tietty väri voidaan valita
   muutamalla eri tavalla. Ihmisen kannalta näistä helpoiten
   tulkittava tapa on värin valitseminen /värisävyn/ (englanniksi
   /hue/), /värikylläisyyden/ (englanniksi /saturation/) ja /värin
   kirkkauden/ (englanniksi /brightness/) avulla. Englanninkielisistä
   sanoista tulee tämän /värimallin/ nimi HSB. 

   #+NAME: hsb-koodaus-havainnollistus 
   #+BEGIN_SRC asymptote :exports none
     <<asymptote-asetukset>>
     settings.render = 2;
     settings.antialias = 4;

     import graph;

     size (15cm, 0);
     int LEVEYS = 100, KORKEUS = 20;
     int KOMPONENTTI_LAATIKOT_N = 100;

     triple valittuVari = (17, 60, 75) / 100.0;

     typedef pen VariFunktio (real);

     void hsbKoodausHavainnollistus (real komponenttiMax,
                                     string komponenttiNimi,
                                     VariFunktio f,
				     real valittuArvoOsuutenaMax)
     {
       real komponenttiAskel = ((real) komponenttiMax) / KOMPONENTTI_LAATIKOT_N;
       real laatikonLeveys = ((real) LEVEYS) / KOMPONENTTI_LAATIKOT_N;

       for (int l = 0;  l < KOMPONENTTI_LAATIKOT_N; ++l)
         {
           real vasenReuna = l * laatikonLeveys;
           path alue = shift ((vasenReuna, 0)) * xscale (laatikonLeveys)
             * yscale (KORKEUS) * unitsquare;
           pair vasenAlakulma = min (alue);
           pair oikeaYlakulma = max (alue);
           axialshade (alue,
                       f (l * komponenttiAskel),
                       vasenAlakulma,
                       f ((l + 1) * komponenttiAskel),
                       (oikeaYlakulma.x, vasenAlakulma.y));
         }
  
       xaxis (komponenttiNimi, xmin = 0, xmax = 100, RightTicks);
       draw (shift ((valittuArvoOsuutenaMax * LEVEYS, 0)) 
             * ((0, 0) -- (0, KORKEUS)), dashed);
     }
   #+END_SRC

   #+RESULTS: hsb-koodaus-havainnollistus

   # Huom. Nämä esitetään png-tiedostoina, koska svg-formaatissa
   # laatikkojen väliin piirtyy pieniä valkoisia viivoja.

   Otetaan nyt jokin väri piirtämistä varten valitsemalla värisävy,
   kirkkaus ja värikylläisyys.
   1. Värisävy on jokin luku nollan ja sadan väliltä. Seuraava kuva
      esittää, mikä värisävy saadaan milläkin luvulla. Kaikissa tämän
      kuvan väreissä on suurin mahdollinen kirkkaus ja värikylläisyys.

      #+NAME: varisavy
      #+BEGIN_SRC asymptote :file varisavy.png :noweb yes
        <<hsb-koodaus-havainnollistus>>
        pen f (real h) { return (hsv (h, 1, 1)); }
        hsbKoodausHavainnollistus (360, "värisävy", f, valittuVari.x);
      #+END_SRC

      #+ATTR_HTML: :class color-coding-img
      #+RESULTS: varisavy
      [[file:varisavy.png]]

      Valitaanpa värisävyksi 17, joka antaa keltavihreän värin. Tämä
      on merkattu kuvaan katkoviivalla.

   2. Valitaan seuraavaksi värin kirkkaus. Kirkkaus kertoo sen, kuinka
      valoisa väri on. Tässä myös kirkkaus on jokin luku nollan ja
      sadan väliltä. Eri kirkkauksilla saadaan seuraavat värit;
      kaikissa tämän kuvan väreissä on suurin mahdollinen
      värikylläisyys.

      #+NAME: kirkkaus
      #+BEGIN_SRC asymptote :file kirkkaus.png :noweb yes
        <<hsb-koodaus-havainnollistus>>
        pen f (real v) { return (hsv (valittuVari.x * 360, 1, v)); }
        hsbKoodausHavainnollistus (1, "kirkkaus", f, valittuVari.z);
      #+END_SRC

      #+ATTR_HTML: :class color-coding-img
      #+RESULTS: kirkkaus
      [[file:kirkkaus.png]]

      Valitaan värisävyn 17 lisäksi kirkkaus 75 (kuvassa
      katkoviivalla).

   3. Vielä voidaan valita värikylläisyys joka kertoo sen, kuinka
      räikeä väri on. Alla myös värikylläisyys on jokin luku nollan ja
      sadan väliltä. Eri värikylläisyyksillä saadaan seuraavat värit.
   
      #+NAME: varikyllaisyys
      #+BEGIN_SRC asymptote :file varikyllaisyys.png :noweb yes
        <<hsb-koodaus-havainnollistus>>
        pen f (real s) { return (hsv (valittuVari.x * 360, s, valittuVari.z)); }
        hsbKoodausHavainnollistus (1, "värikylläisyys", f, valittuVari.y);
      #+END_SRC

      #+ATTR_HTML: :class color-coding-img
      #+RESULTS: varikyllaisyys
      [[file:varikyllaisyys.png]]

      Valitaan värikylläisyydeksi 60 (kuvassa katkoviivalla). 

   Kirkkaus valittiin yllä ennen kylläisyyttä, mutta
   Processing-ohjelmointikielessä värin tiedot annetaan järjestyksessä
   sävy 17, kylläisyys 60 ja kirkkaus 75. Processing-kielessä
   suorakaiteen täyttäminen edellä valitsemallamme värillä tapahtuu
   seuraavasti. HSB-värimallin valinta tapahtuu funktiolla
   ~colorMode()~, ja suorakaiteen täyttämisessä käytetyn värin
   valitseminen funktiolla ~fill()~.

   #+BEGIN_SRC processing :exports both
     size (600, 400);

     // valitaan HSB-värimalli, värien ominaisuuksien suurimmiksi arvoiksi
     // asetetaan 100
     colorMode (HSB, 100); 

     // valitaan täyttöväriksi väri, jonka sävy on 17, kylläisyys 60 ja
     // kirkkaus 75.
     fill (17, 60, 75);

     // piirretään suorakulmio
     rect (50, 50, 300, 300);
   #+END_SRC

   Myös muita värejä kuin täyttöväri voidaan asettaa. Viivojen
   piirtoväriä säädetään funktiolla ~stroke()~, ja koko piirtoikkunan
   taustaväriä funktiolla ~background()~. Seuraavassa on esimerkki
   näistä.

   #+BEGIN_SRC processing :exports both
     size (600, 400);
     colorMode (HSB, 100);

     // täyttöväri räikeä ja kirkas sininen
     fill (67, 100, 100); 

     // tausta samalla sävyllä, mutta vähemmän kylläisellä ja tummemmalla
     background (67, 50, 50); 

     // viivat kirkkaalla punaisella
     stroke (0, 100, 100); 

     rect (100, 100, 400, 200);
   #+END_SRC

   Musta ja valkoinen ovat usein käytettyjä värejä. Niille voidaan
   käyttää väriasetusfunktioiden lyhyempiä versioita, joilla annetaan
   vain yksi luku. Tällöin mustaa vastaa luku 0 ja valkoista luku 100,
   ja välillä olevat luvut antavat harmaan eri sävyjä. Kuvioiden
   ääriviivat voidaan jättää pois funktion ~noStroke()~
   avulla. Viivojen piirtäminen saadaan takaisin funktion ~stroke()~
   avulla. Tässä esimerkki, jossa käytetään näitä ominaisuuksia.
   #+BEGIN_SRC processing :exports both
     size (600, 400);
     colorMode (HSB, 100);
     background (17, 30, 50); // tausta
     noStroke (); // kuvioiden ääriviivat pois
     fill (100); // täytetään valkoisella
     rect (100, 100, 100, 100); // valkoinen suorakaide, ei ääriviivaa

     fill (0); // uudeksi täyttöväriksi musta
     stroke (10, 100, 100); // piirretään viivat, oransseina
     triangle (300, 200, 500, 350, 250, 50); // musta kolmio, oranssi ääriviiva
   #+END_SRC
** {{{example}}}
   Alla on esimerkki yksinkertaisesta kuvasta. Kuvien piirtäminen
   ohjelmallisesti näin yksinkertaisin menetelmin vaatii paljon työtä
   ja on aikaavievää. Sen takia tehtävissä piirretään pääosin hyvin
   yksinkertaisia kuvia.
   #+BEGIN_SRC processing :exports both
     size (600, 400);
     colorMode (HSB, 100);

     noStroke (); // ei piirretä ääriviivoja

     background (65, 30, 90); // sininen taivas taustana

     // nurmikko
     fill (33, 80, 50); // vihreä väri
     rect (0, 250, 600, 150);

     // talo
     fill (5, 50, 90); // rakennuksen väri
     rect (100, 150, 100, 150); // rakennus
     // ikkunat
     fill (65, 100, 50); // ikkunoiden väri
     rect (120, 170, 20, 20);
     rect (120, 210, 20, 20);
     rect (160, 170, 20, 20);
     rect (160, 210, 20, 20);

     // puu
     fill (3, 92, 24); // rungon väri
     rect (400, 240, 10, 10); // runko
     fill (33, 70, 20); // havujen väri
     triangle (380, 240, 430, 240, 405, 220); // alaoksat
     triangle (385, 230, 425, 230, 405, 210); // latva
   #+END_SRC
** Miten HSB-arvoja löytää?
   HSB-arvoja nimitetään myös HSV-arvoiksi. Alla olevalta sivulta saa
   HSV-arvoja nimetyille väreille viemällä hiiren osoittimen värin
   päälle.

   https://en.wikipedia.org/wiki/List_of_colors_(compact)

   Sivuilta saaduissa arvoissa on yksi merkittävä ero: niissä
   värisävyn arvo eli \(H\)-arvo on lukujen 0 ja 360 välillä.  Tämän
   arvon voi muuttaa lukujen 0 ja 100 välille lausekkeella \[
   \frac{H}{360}\cdot 100. \]

   Sivulta löytyvät esimerkiksi värille \ldquo{}Turquoise
   green\rdquo{} arvot \((142, 25, 84).\) Tällöin lukujen 0 ja 100
   välillä oleva sävyarvo on \[ \frac{142}{360}\cdot 100
   \approx 39. \] Näillä arvoilla saadaan seuraavanlainen väri.

   #+BEGIN_SRC processing :exports both
     size (100, 100);
     colorMode (HSB, 100);
     background (39, 25, 84);
   #+END_SRC
** Tehtävät
   1. Piirrä keskelle \((600\times 400)\)-kokoista piirtoikkunaa
      \((400\times 200)\)-kokoinen suorakulmio. Taustan värin
      HSB-arvojen tulee olla \((9, 45, 76)\) ja suorakulmion \((54,
      100, 100)\). Suorakulmiolla ei ole reunusta. Muista asettaa
      ~colorMode (HSB, 100)~.
   2. Piirrä punainen neliö siniselle pohjalle. Neliöllä tulee olla
      vihreä reunus. Kuvioiden koot ja tarkat värit voit valita itse.
   3. Piirrä alla olevan kaltainen kuvio. Taustan HSB-väriarvot ovat
      \((96, 83, 67\)), suorakaiteen \((56, 100, 73)\) ja kolmion
      \((45, 51, 51).\) Suorakaiteella ei ole reunusta, kun taas
      kolmiolla on valkoinen reunus. Kolmion tulee olla osittain
      suorakaiteen päällä. Muuten voit valita kuvioiden mitat
      vapaasti.
      #+NAME: vari-suorakulmio-kolmio
      #+BEGIN_SRC processing
        size (300, 200);
        colorMode (HSB, 100);
        background (96, 83, 67);

        // suorakaide
        noStroke ();
        fill (56, 100, 73);
        rect (50, 50, 100, 100);

        // kolmio
        stroke (100); // valkoinen reunus
        fill (45, 51, 51);
        triangle (100, 150, 250, 100, 150, 20);
      #+END_SRC
   4. Tässä tehtävässä piirtoikkunan taustavärin HSB-arvot ovat \((44,
      66, 71).\) Millään piirretyllä kuviolla ei ole reunaa. Voit
      valita kuvioiden mitat vapaasti.
      a) Piirrä ikkunan sisälle kaksi suorakaidetta, joilla on sama
         värisävy ja värikylläisyys kuin taustalla. Toisen
         suorakaiteen kirkkaus on 25 yksikköä suurempi kuin taustan,
         toisen 25 yksikköä pienempi kuin taustan.

      b) Piirrä ikkunan sisälle kaksi kolmiota, joilla on sama
         värisävy ja kirkkaus kuin taustalla. Toisen kolmion
         värikylläisyys on 30 yksikköä suurempi kuin taustan, toisen
         30 yksikköä pienempi kuin taustan.
   5. Piirrä alla oleva kuva. Piirtoikkunan koko on \((400\times
      400).\) Keltaisen värin HSB-arvot ovat \((13, 62, 98).\) 
      #+NAME: vari-tiikeri
      #+BEGIN_SRC processing
        size (400, 400);
        colorMode (HSB, 100);
        noStroke ();
        background (13, 62, 98); // taustaväri keltainen
	
	// mustat osat
        fill (0);
        quad (0, 400, 100, 0, 200, 0, 100, 400);
        triangle (300, 400, 400, 400, 400, 0);
	
	// valkoinen osa
        fill (100);
        quad (200, 0, 100, 400, 200, 400, 300, 0);
      #+END_SRC
   6. Piirrä haluamasi kokoinen Ahvenanmaan lippu. Selvitä tarvittavat
      mitat ja värien tiedot. Voit pyöristää laskuissa saamasi
      tulokset kokonaisluvuiksi Processing-ohjelmaa varten.

      #+NAME: vari-ahvenanmaan-lippu
      #+BEGIN_SRC processing :exports results
        size (520, 340);
        colorMode (HSB, 100);
        noStroke ();

        background (59, 100, 49); // sininen tausta

	// keltaiset viivat (joiden päälle piirretään punaiset)
        fill (14, 100, 100);
        rect (160, 0, 100, 340);
	rect (0, 120, 520, 100);

	// punaiset viivat
        fill (0, 100, 94);
        rect (190, 0, 40, 340);
	rect (0, 150, 520, 40);
      #+END_SRC
** Ratkaisuja
   1. 
      #+BEGIN_SRC processing :exports both
        size (600, 400);
        colorMode (HSB, 100);
        background (9, 45, 76);
        noStroke ();
        fill (54, 100, 100);
        rect (100, 100, 400, 200);
      #+END_SRC
   2. 
      #+BEGIN_SRC processing :exports both
        size (300, 300);
        colorMode (HSB, 100);
        background (65, 100, 100);
        fill (0, 100, 100);
        stroke (35, 100, 100);
        rect (100, 100, 100, 100);
      #+END_SRC
   3. 
       #+BEGIN_SRC processing :exports code :noweb yes
       <<vari-suorakulmio-kolmio>>
       #+END_SRC
   4. 
      a) 
	 #+NAME: vari-komponenttien-muutos-alku
	 #+BEGIN_SRC processing :exports none
           size (300, 200);
           colorMode (HSB, 100);
           background (44, 66, 71);
	   noStroke ();
	 #+END_SRC

	 #+BEGIN_SRC processing :exports both :noweb yes
	   <<vari-komponenttien-muutos-alku>>
           fill (44, 66, 46);
           rect (50, 50, 100, 100);
           fill (44, 66, 96);
           rect (150, 100, 50, 50);
	 #+END_SRC
      b) 
	 #+BEGIN_SRC processing :exports both :noweb yes
           <<vari-komponenttien-muutos-alku>>
           fill (44, 36, 71);
           triangle (10, 10, 150, 70, 90, 130);
           fill (44, 96, 71);
           triangle (100, 180, 120, 70, 250, 110);
	 #+END_SRC
   5. 
      #+BEGIN_SRC processing :exports code :noweb yes
      <<vari-tiikeri>>
      #+END_SRC

   6. Ahvenanmaan lipun leveyden ja korkeuden suhde on \(26 : 17.\)
      Piirtoikkunan mitoiksi voidaan valita vaikkapa \((520\times
      340).\) Leveyssuunnassa lippu jakautuu tällöin eri väreihin
      suhteissa \(160 : 30 : 40 : 30 : 260\) ja pystysuunnassa
      suhteissa \(120 : 30 : 40 : 30 : 120.\) Sinisen värin HSB-arvot
      ovat \((59, 100, 49),\) keltaisen \((14, 100, 100)\) ja punaisen
      \((0, 100, 94).\)

      #+BEGIN_SRC processing :exports code :noweb yes
      <<vari-ahvenanmaan-lippu>>
      #+END_SRC
   
