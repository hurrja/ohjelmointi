#+INCLUDE: ohjelmointi-kappaleiden-yhteiset-asetukset.org

* Satunnaisuus
** Funktio ~random()~
   #+BEGIN_QUOTE
   Processing kielen funktio
   #+BEGIN_EXAMPLE
   float random (float k)
   #+END_EXAMPLE
   palauttaa satunnaisen desimaaliluvun, joka arvo on vähintään nolla
   ja pienempi kuin ~k~.

   Vaihtoehtoisesti funktio
   #+BEGIN_EXAMPLE
   float random (float v, float k)
   #+END_EXAMPLE
   palauttaa satunnaisen desimaaliluvun, joka arvo on vähintään ~v~ ja
   pienempi kuin ~k~.
   #+END_QUOTE
** Esimerkki
   Alla oleva ohjelma piirtää 10 ympyrää satunnaisiin piirtoikkunan
   kohtiin.
   #+BEGIN_SRC processing
     size (600, 400);
     final int HALKAISIJA = 10;

     int n = 1;
     while (n < 10)
     {
       ellipse (random (width), random (height), HALKAISIJA, HALKAISIJA);
       n++;
     }
   #+END_SRC
** Esimerkki
   [[file:satunnaisuus-ympyrajahti-sivu.org][Tällä sivulla]] oleva interaktiivinen animaatio on ohjelmoitu alla
   olevalla ohjelmakoodilla. Ohjelmassa piirretään ympyrä satunnaiseen
   kohtaan sen jälkeen, kun käyttäjä on painanut hiiren painiketta
   ympyrän sisällä. Ohjelmasta kannattaa huomata seuraavat seikat.
   - Ympyrän keskipiste asetetaan satunnaiseen kohtaan funktion
     ~uusiKohta()~ avulla. Funktiota kutsutaan kahdessa eri
     tapauksessa: ohjelman alussa sekä painalluksen ollessa ympyrän
     sisällä.
   - Ympyrän keskipisteen \(x\)-koordinaatti on satunnaisluku, jonka
     arvo on vähintään ~SADE~ ja pienempi kuin ~(width - SADE)~. Näin
     varmistetaan, että piirretty ympyrä on piirtoikkunan sisällä.

   #+BEGIN_SRC processing :noweb yes :exports code
   <<satunnaisuus-ympyrajahti>>
   #+END_SRC
** Satunnainen kokonaisluku
** Esimerkki
   #+BEGIN_SRC processing
     size (600, 200);
     colorMode (HSB, 100);
     background (0);
     fill (100);
     textAlign (CENTER, CENTER);
     textSize (20);

     int n = 1;
     while (n < 30)
     {
       text (floor (random (2)), 20 * n, height / 2.0);
       n++;
     }

   #+END_SRC
#+INCLUDE: satunnaisuus-ympyrajahti.org
