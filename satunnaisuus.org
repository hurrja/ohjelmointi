#+INCLUDE: ohjelmointi-kappaleiden-yhteiset-asetukset.org

* Satunnaisuus
** Funktio ~random()~
   #+BEGIN_QUOTE
   Processing kielen funktio
   #+BEGIN_EXAMPLE
   float random (float k)
   #+END_EXAMPLE
   palauttaa satunnaisen desimaaliluvun, joka arvo on vähintään nolla
   ja pienempi kuin ~k~.

   Vaihtoehtoisesti funktio
   #+BEGIN_EXAMPLE
   float random (float v, float k)
   #+END_EXAMPLE
   palauttaa satunnaisen desimaaliluvun, joka arvo on vähintään ~v~ ja
   pienempi kuin ~k~.
   #+END_QUOTE
** Esimerkki
   Alla oleva ohjelma piirtää 10 ympyrää satunnaisiin piirtoikkunan
   kohtiin.
   #+BEGIN_SRC processing
     size (600, 400);
     final int HALKAISIJA = 10;

     int n = 1;
     while (n < 10)
     {
       ellipse (random (width), random (height), HALKAISIJA, HALKAISIJA);
       n++;
     }
   #+END_SRC
** Esimerkki
   [[file:satunnaisuus-ympyrajahti-sivu.org][Tällä sivulla]] oleva interaktiivinen animaatio on ohjelmoitu alla
   olevalla ohjelmakoodilla. Ohjelmassa piirretään ympyrä satunnaiseen
   kohtaan sen jälkeen, kun käyttäjä on painanut hiiren painiketta
   ympyrän sisällä. Ohjelmasta kannattaa huomata seuraavat seikat.
   - Ympyrän keskipiste asetetaan satunnaiseen kohtaan funktion
     ~uusiKohta()~ avulla. Funktiota kutsutaan kahdessa eri
     tapauksessa: ohjelman alussa sekä painalluksen ollessa ympyrän
     sisällä.
   - Ympyrän keskipisteen \(x\)-koordinaatti on satunnaisluku, jonka
     arvo on vähintään ~SADE~ ja pienempi kuin ~(width - SADE)~. Näin
     varmistetaan, että piirretty ympyrä on piirtoikkunan sisällä.

   #+BEGIN_SRC processing :noweb yes :exports code
   <<satunnaisuus-ympyrajahti>>
   #+END_SRC
** Satunnainen kokonaisluku
   Miten voidaan arpoa satunnainen kokonaisluku, joka on joko 0 tai 1?
   Yksi tapa ratkaista ongelma on käyttää funktiota
   #+BEGIN_EXAMPLE
   int floor (float a)
   #+END_EXAMPLE
   Silloin, kun ~a~ on positiivinen, funktio palauttaa luvun ~a~
   kokonaislukuosan. [fn:: Tarkalleen ottaen ~floor()~ pyöristää luvun
   lähimpään /pienempään/ kokonaislukuun. Esimerkiksi kutsun ~floor
   (-2.1)~ paluuarvo on \(-3.\)] Esimerkiksi funktiokutsu ~floor
   (1.99)~ palauttaa arvon 1. Jos arvotaan satunnaisluku, jonka arvo
   on vähintään 0 ja pienempi kuin 2, niin saadun satunnaisluvun
   kokonaislukuosa on yhtä suurella todennäköisyydellä 0 tai 1. Alla
   olevaan kuvaan lukusuoralle punaisella merkittyjen lukujen
   kokonaislukuosa on 0 ja sinisellä merkittyjen kokonaislukuosa 1.
   #+NAME: satunnaisuus-kokonaisluku-lukusuora
   #+BEGIN_SRC asymptote :file satunnaisuus-kokonaisluku-lukusuora.svg
     import graph;

     size (20cm, 0);
     defaultpen (fontsize (16));
     pen thickPen = linewidth (4) + squarecap;
     draw ((0, 0) -- (1, 0), red + thickPen);
     draw ((1, 0) -- (2, 0), blue + thickPen);
     xaxis ("satunnainen desimaaliluku",
            xmin = 0,
            xmax = 2,
            RightTicks);
   #+END_SRC

   #+RESULTS: satunnaisuus-kokonaisluku-lukusuora
   [[file:satunnaisuus-kokonaisluku-lukusuora.svg]]

   Alla olevassa esimerkissä piirtoikkunaan piirretään satunnaisesti
   nollia ja ykkösiä.
   #+BEGIN_SRC processing :exports both
     size (620, 200);
     colorMode (HSB, 100);
     background (0);
     fill (100);
     textAlign (CENTER, CENTER);
     textSize (20);

     // piirretään 30 satunnaista lukua 0 tai 1
     int n = 1;
     while (n <= 30)
     {
       text (floor (random (2)), 20 * n, height / 2.0);
       n++;
     }
   #+END_SRC

   Yleisemmin pätee seuraava.
   #+BEGIN_QUOTE
   Satunnainen kokonaisluku, jonka arvo on vähintään 0 ja korkeintaan
   ~k~ voidaan arpoa funktiokutsulla
   #+BEGIN_EXAMPLE
   floor (random (k + 1))
   #+END_EXAMPLE
   Vastaavasti satunnainen kokonaisluku, jonka arvo on vähintään ~v~
   ja korkeintaan ~k~ voidaan arpoa funktiokutsulla
   #+BEGIN_EXAMPLE
   floor (random (v, k + 1))
   #+END_EXAMPLE
   #+END_QUOTE
** Esimerkki
   [[file:satunnaisuus-janat-sivu.org][Tällä sivulla]] oleva animaatio on piirretty alla olevalla
   ohjelmakoodilla. Animaatiossa piirretään joka toinen sekunti
   satunnainen määrä janoja satunnaisin värein piirtoikkunan
   yläreunasta alareunaan satunnaisiin kohtiin.

   #+BEGIN_SRC processing :exports code :noweb yes
   <<satunnaisuus-janat>>
   #+END_SRC

#+INCLUDE: satunnaisuus-ympyrajahti.org
#+INCLUDE: satunnaisuus-janat.org
