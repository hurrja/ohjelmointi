#+INCLUDE: ohjelmointi-kappaleiden-yhteiset-asetukset.org

* Loogiset lausekkeet ja muuttujat
** Looginen lauseke
   #+BEGIN_QUOTE
   Loogisen lausekkeen arvo on joko tosi tai epätosi. Esimerkkejä
   loogisista lausekkeista ovat
   - ~1 < 2~, jonka arvo on tosi
   - ~x != y~, jonka arvo riippuu muuttujien ~x~ ja ~y~ arvoista.
   #+END_QUOTE
** Loogiset operaattorit
   Loogiset operaattoreilla voidaan yhdistää loogisia lauseita samaan
   tapaan kuin tekstissä sanoilla \ldquo{}ja\rdquo, \ldquo{}tai\rdquo
   sekä \ldquo{}ei\rdquo.
** Ja-operaattori ~&&~
    Operaattori ~&&~ vastaa suomen kielen sanaa
    \ldquo{}ja\rdquo{}. Sen arvo on tosi täsmälleen silloin, kun
    molemmat sen yhdistämät lausekkeet ovat tosia.
   #+BEGIN_QUOTE
   | ~A~     | ~B~     | ~A && B~ |
   |---------+---------+----------|
   | epätosi | epätosi | epätosi  |
   | epätosi | tosi    | epätosi  |
   | tosi    | epätosi | epätosi  |
   | tosi    | tosi    | tosi     |
   #+END_QUOTE
*** Esimerkki
    Alla olevassa interaktiivisessa animaatiossa piirretään eri
    värinen pystypalkki sen mukaan, onko hiiren painallus palkin sisä-
    vai ulkopuolella. 
    #+NAME: loogiset-lausekkeet-muuttujat-palkki
    #+BEGIN_SRC processing
      final int X = 200, LEVEYS = 100; // palkin x-koordinaatti ja leveys
      void setup ()
      {
        size (600, 400);
        colorMode (HSB, 100);
        background (0);
        fill (100); // alkutilanteessa piirretään valkoinen palkki
      }

      void draw ()
      {
        rect (X, 0, LEVEYS, height);
      }

      void mousePressed ()
      {
        float savy; // palkin värisävy

        // vihreä väri, jos hiiren x-koordinaatti on suorakaiteen sisällä
        if (mouseX >= X && mouseX < X + LEVEYS)
          savy = 35;
        else
          savy = 0;

        fill (savy, 100, 100);
      }
    #+END_SRC
    Alla oleva ohjelmakoodi toteuttaa animaation. Painallus on palkin
    sisällä, jos hiiren \(x\)-koordinaatti on palkin oikean ja
    vasemman reunan välissä eli jos ~(mouseX >= X && mouseX < X +
    LEVEYS)~.
    #+BEGIN_SRC processing :noweb yes :exports code
    <<loogiset-lausekkeet-muuttujat-palkki>>
    #+END_SRC
** Loogiset muuttujat
   #+BEGIN_QUOTE
   Tyyppiä ~boolean~ olevan muuttujan arvo on joko ~true~ (tosi) tai
   ~false~ (epätosi).
   #+END_QUOTE
** Tai-operaattori ~||~
   Suomen kielessä sanan \ldquo{}tai\rdquo käyttö on joskus
   monitulkintainen. Kuvitellaan, että joku sanoo: \ldquo{}Lähden
   retkelle, jos Ville tai Marika lähteen mukaan.\rdquo Mitä tällöin
   tapahtuu, jos sekä Ville että Marika lähtevät mukaan?

   Ohjelmointikielessä tällaista epätäsmällisyyttä ei voi
   olla. Processing-kielessä tai-operaattorin ~||~ arvo on tosi
   täsmälleen silloin, kun vähintään toinen sen yhdistämistä
   lausekkeista on tosi.
   #+BEGIN_QUOTE
   | ~A~     | ~B~     | ~A~ \vert\thinsp\vert ~B~ |
   |---------+---------+---------------------------|
   | epätosi | epätosi | epätosi                   |
   | epätosi | tosi    | tosi                      |
   | tosi    | epätosi | tosi                      |
   | tosi    | tosi    | tosi                      |
   #+END_QUOTE
** Esimerkki
   Alla oleva esimerkki havainnollistaa sekä loogisten muuttujien että
   operaattorin ~||~ käyttöä.

   #+NAME: loogiset-lausekkeet-muuttujat-ristikko
   #+BEGIN_SRC processing
     final int X = 200, Y = 300; // ristikon risteyskohdan koordinaatit
     void setup ()
     {
       size (600, 400);
       colorMode (HSB, 100);
       background (0);
       stroke (100);
     }

     void draw ()
     {
       line (X, 0, X, height);
       line (0, Y, width, Y);
     }

     void mousePressed ()
     {
       boolean vasemmalla = mouseX < X;
       boolean ylapuolella = mouseY < Y;

       float savy;
       if (vasemmalla || ylapuolella)
         savy = 0;
       else
         savy = 65;

       stroke (savy, 100, 100);
     }
    #+END_SRC
   
** Ei-operaattori ~!~
  #+BEGIN_QUOTE
  | ~A~     | ~!A~    |
  |---------+---------|
  | epätosi | tosi    |
  | tosi    | epätosi |
  #+END_QUOTE
