#+INCLUDE: ohjelmointi-kappaleiden-yhteiset-asetukset.org

#+LATEX: \usepackage{qtree}

* Rekursio
** Esimerkki
   Alla oleva kuva voitaisiin piirtää ~for~- tai ~while~-silmukan
   avulla. Se voidaan kuitenkin piirtää myös ilman silmukoita
   määrittelemällä funktio, joka kutsuu itse itseään.
   #+NAME: rekursio-sisakkaiset-ympyrat
   #+BEGIN_SRC processing
     void piirraYmpyrat (float d, boolean valkoinen, int piirretaan)
     {
       // palataan jos on piirretty jo riittävästi
       if (piirretaan == 0)
         return;

       // valkoinen tai musta ympyrä
       if (valkoinen)
         fill (100);
       else
         fill (0);

       // piirretään ympyrä
       ellipse (width / 2.0, height / 2.0, d, d);

       // jatketaan piirtämistä, seuraavaksi pienempi jolla eri väri
       piirraYmpyrat (0.9 * d, !valkoinen, piirretaan - 1);
     }

     void setup ()
     {
       size (600, 600);
       colorMode (HSB, 100);
       noLoop ();
     }

     void draw ()
     {
       piirraYmpyrat (width, false, 10);
     }
   #+END_SRC

  #+LATEX: \newcommand{\Circles}[1]{\texttt{piirraYmpyrat (#1)}}
  #+BEGIN_CENTER
  #+BEGIN_SRC latex
  \Tree [ .{\Circles{7, 2, 1, 0}} [ .{\Circles{7, 3, 1, 1}} [ .{\Circles{7,
      4, 2, 1}} [ .{\Circles{7, 
      5, 3, 2}} [ .{\Circles{7,
          6, 5, 3}} [ .{\Circles{7,
          7, 8, 5}} [ .{\texttt{8}} ] ] ] ] ] ] ]
  #+END_SRC
  #+END_CENTER


** Esimerkki
   #+BEGIN_SRC processing
     void piirraNeliot (float sivu, boolean valkoinen, int lkm, int nelioita)
     {
       if (valkoinen)
         fill (100);
       else
         fill (0);

       rect (0, 0, sivu, sivu);
       if (lkm == nelioita)
         return;
       else
         piirraNeliot (sivu / 2, !valkoinen, lkm + 1, nelioita);
     }

     void setup ()
     {
       size (600, 600);
       colorMode (HSB, 100);
       background (0);
       noLoop ();
     }

     void draw ()
     {
       piirraNeliot (width / 2.0, true, 1, 10);
     }
   #+END_SRC

** Esimerkki
   #+BEGIN_SRC processing
     void piirraSuorakaiteet (float x, float leveys, int taso, int tasoja)
     {
       float l = leveys / 3; // piirretävän suorakaiteen leveys
       rect (x + l, 0, l, height);
       if (taso == tasoja)
         return;
       else
       {
         int uusiTaso = taso + 1;
         piirraSuorakaiteet (x, l, uusiTaso, tasoja);
         piirraSuorakaiteet (x + 2 * l, l, uusiTaso, tasoja);
       }
     }

     void setup ()
     {
       size (600, 400);
       colorMode (HSB, 100);
       background (0);
       fill (0, 100, 100);
       noLoop ();
     }

     void draw ()
     {
       piirraSuorakaiteet (0, width, 1, 5);
     }
   #+END_SRC
** Esimerkki
   #+BEGIN_SRC processing
     void piirraYmpyrat (float x, float y, float d, int n, int N)
     {
       float r = d / 2;
       ellipse (x - r, y, d, d);
       ellipse (x + r, y, d, d);
       if (n != N)
       {
         piirraYmpyrat (x - r, y, d / 2, n + 1, N);
         piirraYmpyrat (x + r, y, d / 2, n + 1, N);
       }
     }

     void setup ()
     {
       size (600, 600);
       noLoop ();
     }

     void draw ()
     {
       piirraYmpyrat (width / 2.0, height / 2.0, width / 2.0, 0, 5);
     }
   #+END_SRC
   
